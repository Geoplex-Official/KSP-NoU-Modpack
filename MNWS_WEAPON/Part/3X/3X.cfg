PART
{
	// Kerbal Space Program - Part Config

	// --- general parameters ---
	name = 3X
	module = Part
	author = Johnny005611

	// --- asset parameters ---
	MODEL
	{
		model = MNWS_WEAPON/Part/3X/3X
		//scale = 1, 1, 1
	}
	rescaleFactor = 1


	// --- node definitions ---
	node_attach = 0.0, 0, 1, 0, 0, 1, 0
	
    node_stack_missile1 = 0.0, -6, -0.812, 0, 0, -1, 2
	node_stack_missile2 = 0.0, -1.5, -0.812, 0, 0, -1, 2
	
    

	
	stackSymmetry = 1

	// --- editor parameters ---
	TechRequired = precisionEngineering
	entryCost = 2100
	cost = 950
	category = Pods
	subcategory = 0
	title = 3X TRUCK
	manufacturer = Johnny005611
	description = 
	// attachment rules: stack, srfAttach, allowStack, allowSrfAttach, allowCollision
	attachRules = 1,1,1,1,1

	// --- standard part parameters ---
	mass = 10
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 2
	crashTolerance = 600
	maxTemp = 5200
	
	


	CrewCapacity = 1
	
	
	

	
	MODULE
	{
		name = ModuleCommand
		minimumCrew = 1
		RESOURCE
		{
			name = ElectricCharge
			rate = 1
		}
	}
	
	MODULE
	{
		name = ModuleSAS
	}
	


	MODULE
{
   name = ModuleAnimateGeneric
   defaultActionGroup = Gear
   animationName = 3X
   actionGUIName = Toggle Gear
   startEventGUIName = Deploy Gear
   endEventGUIName = Retract Gear
}

	MODULE
{
   name = ModuleAnimateGeneric
   animationName = 3XLight
   actionGUIName = Toggle Light
   startEventGUIName = Light On
   endEventGUIName = Light Off
}

	
	RESOURCE
	{
		name = ElectricCharge
		amount = 100000000
		maxAmount = 100000000
	}
	


	MODULE
	{
		name = ModuleReactionWheel
		PitchTorque = 1
		YawTorque = 10
		RollTorque = 1
		RESOURCE
		{
			name = ElectricCharge
			rate = 0.01
		}
	}

	MODULE
    {
	name = HitpointTracker
	ArmorThickness = 100
	maxHitPoints = 50000
    }
	
	
	
	
	MODULE
{
        name = ModuleRadar

        // -- Section: General Configuration --
        radarName = Radar Data Receiver		// if left empty part.title is used, but advised to set this to a nice printable text
        //rwrThreatType = 0				// IMPORTANT, please set correctly:
                                // 0 = SAM site radar
                                // 1 = Fighter radar (airborne)
                                // 2 = AWACS radar (airborne)
                                // 3, 4 = ACTIVE MISSILE (DO NOT USE UNLESS YOU KNOW WHAT YOU'RE DOING!
                                // 5 = Detection radar (ground/ship based)
                                // 6 = SONAR (ship/submarine based)
        //rotationTransformName = scanRotation
	    //turretID = 0					// if needed
        resourceDrain = 0.1				// change to higher values for more capable radars, e.g AESA

        // -- Section: Capabilities --
        //omnidirectional = true				// false: boresight scan radar
        //directionalFieldOfView = 90			// for ominidrectional only
        //boresightFOV = 10				// for boresight only
        //scanRotationSpeed = 240				// degress per second
        //lockRotationSpeed = 120				// only relevant if canLock
        //lockRotationAngle = 4
        //showDirectionWhileScan = true			// can show target direction on radar screen. False: radar echos displayed as block only (no direction)
        //multiLockFOV = 30				// only relevant if canLock
        //lockAttemptFOV = 2				// only relevant if canLock
        //maxLocks = 1					//how many targets can be locked/tracked simultaneously. only relevant if canLock

        canScan = false					// scanning/detecting targets (volume search)
        canLock = true					// locking/tracking targets (fire control)
        canTrackWhileScan = false			// continue scanning while tracking a locked target
        canRecieveRadarData = true			// can work as passive data receiver (NOTE THE SPELLING! [SIC])

        //minSignalThreshold = 350				// DEPRECATED, NO LONGER USED! use detection float curve!
        //minLockedSignalThreshold = 120			// DEPRECATED, NO LONGER USED! use locktrack float curve!

        //radarGroundClutterFactor = 0.1			// how much is the radar efficiency reduced to by ground clutter/look-down?
                                // 0.0 = reduced to 0% (very hard to detect ground targets)
                                // 1.0 = fully efficient (no difference between air & ground targets)
                                // values >1.0 are possible, meaning the radar is MORE efficient during look down than vs aireal targets.

        radarDetectionCurve
        {
          // floatcurve to define at what range (km) which minimum cross section (m^2) can be detected.
          // this defines both min/max range of the radar, and sensitivity/efficiency
          // it is recommended to define an "assured detection range", at which all craft are detected regardless
          //     of their rcs. This is achieved by using a minrcs value of zero, thus detecting everything.
          //        key = distance	rcs

    		// nothing defined here as this radar does not support scanning on its own
        }

        radarLockTrackCurve
        {
            // same as detectionCurve, just for locking/tracking purpose
            // ATTENTION: DO NOT USE an "assured locking range" here, as this would render lock-breaking
            //   ECM-jammers completely ineffective!!
            //   Min cross section for locking should always be at least 1 m^2, even at range 0km!
            //      key = distance	rcs

    		// nothing defined here as this radar does not support locking
        }
}

	
	
MODULE
{
  name = MissileFire
}

MODULE
{
  name = RadarWarningReceiver
}

MODULE
{
  name = ModuleWingCommander
}



	MODULE
{
    name = BurnTogether
}
}
