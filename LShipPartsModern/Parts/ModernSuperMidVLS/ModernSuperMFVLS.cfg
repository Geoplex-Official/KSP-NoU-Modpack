PART
{
	name = ModernSuperMFVLS
	module = Part
	author = Spanner
			MODEL
	{
		model = LShipPartsModern/Parts/ModernSuperMidVLS/ModernSuperMFVLS
		scale = 1.0, 1.0, 1.0
	}
	rescaleFactor = 1
	buoyancy = 0
	//[first 3] X (Left and Right) Y (Forward and Back) Z (Up and Down) [relative to facing forward in space plane hangar]
	node_attach = 0, 0, 4.442009, 0, -1, 0, 7
	node_stack_back = 0, -10, 0, 0, 0, -1, 7
	node_stack_front = 0, 10, 0, 0, 0, 1, 7
	
NODE
	{
		name = vls1
		transform = vls1 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls1X
		transform = vls1X // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls2
		transform = vls2 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls3
		transform = vls3 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls4
		transform = vls4 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls5
		transform = vls5 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls6
		transform = vls6 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls7
		transform = vls7 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8
		transform = vls8 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls8X
		transform = vls8X // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls9
		transform = vls9 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls9X
		transform = vls9X // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls10
		transform = vls10 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls11
		transform = vls11 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls12
		transform = vls12 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls13
		transform = vls13 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls14
		transform = vls14 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls15
		transform = vls15 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16
		transform = vls16 // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls16X
		transform = vls16X // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	//////////ROW TWO
	NODE
	{
		name = vls1B
		transform = vls1B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls1BX
		transform = vls1BX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls2B
		transform = vls2B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls3B
		transform = vls3B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls4B
		transform = vls4B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls5B
		transform = vls5B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls6B
		transform = vls6B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls7B
		transform = vls7B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8B
		transform = vls8B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls8BX
		transform = vls8BX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls9B
		transform = vls9B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls9BX
		transform = vls9BX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls10B
		transform = vls10B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls11B
		transform = vls11B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls12B
		transform = vls12B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls13B
		transform = vls13B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls14B
		transform = vls14B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls15B
		transform = vls15B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16B
		transform = vls16B // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16BX
		transform = vls16BX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
////////Row 3 ///////////
	NODE
	{
		name = vls1C
		transform = vls1C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls1CX
		transform = vls1CX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls2C
		transform = vls2C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls3C
		transform = vls3C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls4C
		transform = vls4C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls5C
		transform = vls5C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls6C
		transform = vls6C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls7C
		transform = vls7C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8C
		transform = vls8C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8CX
		transform = vls8CX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls9C
		transform = vls9C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls9CX
		transform = vls9CX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls10C
		transform = vls10C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls11C
		transform = vls11C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls12C
		transform = vls12C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls13C
		transform = vls13C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls14C
		transform = vls14C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls15C
		transform = vls15C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16C
		transform = vls16C // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls16CX
		transform = vls16X // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	////////////////////ROW 4 ////////////////
		NODE
	{
		name = vls1D
		transform = vls1D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls1DX
		transform = vls1DX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls2D
		transform = vls2D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls3D
		transform = vls3D// Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls4D
		transform = vls4D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls5D
		transform = vls5D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls6D
		transform = vls6D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls7D
		transform = vls7D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8D
		transform = vls8D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls8DX
		transform = vls8DX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls9D
		transform = vls9D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
		NODE
	{
		name = vls9DX
		transform = vls9DX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls10D
		transform = vls10D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls11D
		transform = vls11D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls12D
		transform = vls12D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls13D
		transform = vls13D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls14D
		transform = vls14D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls15D
		transform = vls15D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16D
		transform = vls16D // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	NODE
	{
		name = vls16DX
		transform = vls16DX // Or whatever your transform name is.
		size = 1 // Will always be 0 until fixed.
		method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
	}
	
	////////////////////NODE END ///////////////////////
	TechRequired = generalConstruction
	entryCost = 10000
	cost = 100
	category = Structural
	subcategory = 0
title = #autoLOC_SMIndustries_2000074	//#autoLOC_SMIndustries_2000074 = Large Modern MF VLS 40
manufacturer = Festive Naval Engineering Co. // A subsidiary of SM Marine
description = #autoLOC_SMIndustries_2000075	//#autoLOC_SMIndustries_2000075 = A Vertical Launch compatibility system for Larger ships, holds 40 MFW launch tubes for various combinations of missiles and tube launcher sizes
	attachRules = 1,1,1,0,1
	mass = 50
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 1000
	breakingForce = 70000
	breakingTorque = 70000
	maxTemp = 2400// = 320000
	bulkheadProfiles = Size3
	heatConductivity = 0.00001
	explosionPotential = 0.1
	thermalMassModifier = 1.0


  // animationName = ModSupVLS
	MODULE
	{
		name = ModuleActiveRadiator
		maxEnergyTransfer = 5000
		overcoolFactor = 0.25
		isCoreRadiator = true
		maxLinksAway = 4	
	}		

}
