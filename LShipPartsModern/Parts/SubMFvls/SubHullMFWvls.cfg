PART
{
	name = SubHullMFWvls
	module = Part
	author = Spanner
	mesh = model.mu
	
	buoyancy = 0.6
	maxPressure = 5000
	
	rescaleFactor = 1
	//[first 3] X (Left and Right) Y (Forward and Back) Z (Up and Down) [relative to facing forward in space plane hangar]
	node_stack_front = 0, -1, 0.0, 0, 0, -1, 7
	node_stack_back = 0, 1, 0.0, 0, 0, 1, 7
	NODE
		{
			name = vls1
			transform = vls1 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls2
			transform = vls2 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls3
			transform = vls3 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls4
			transform = vls4 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls5
			transform = vls5 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls6
			transform = vls6 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls7
			transform = vls7 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls8
			transform = vls8 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls9
			transform = vls9 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls10
			transform = vls10 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls11
			transform = vls11 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls12
			transform = vls12 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls13
			transform = vls13 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls14
			transform = vls14 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls15
			transform = vls15 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls16
			transform = vls16 // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		//////////ROW TWO
		NODE
		{
			name = vls1B
			transform = vls1B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls2B
			transform = vls2B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls3B
			transform = vls3B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls4B
			transform = vls4B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls5B
			transform = vls5B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls6B
			transform = vls6B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls7B
			transform = vls7B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls8B
			transform = vls8B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls9B
			transform = vls9B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls10B
			transform = vls10B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls11B
			transform = vls11B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls12B
			transform = vls12B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls13B
			transform = vls13B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls14B
			transform = vls14B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls15B
			transform = vls15B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
		NODE
		{
			name = vls16B
			transform = vls16B // Or whatever your transform name is.
			size = 1 // Will always be 0 until fixed.
			method = FIXED_JOINT // will always be FIXED_JOINT until fixed.
		}
	TechRequired = generalConstruction
	entryCost = 10000
	cost = 100
	category = Structural
	subcategory = 0
	title = #autoLOC_SMIndustries_2000088	//#autoLOC_SMIndustries_2000088 = Submarine  MFW VLS Hull Section
	manufacturer = Festive Naval Engineering Co. // A susbsidiary of SM Marine
	description = #autoLOC_SMIndustries_2000089	//#autoLOC_SMIndustries_2000089 = A Vertical Launch system compatability part for the Malfunc weaponry VLS tubes. Will hold 16 individual tubes or 4 quads
	attachRules = 1,0,1,0,1
	mass = 100
	dragModelType = default
	maximum_drag = 0.2
	minimum_drag = 0.2
	angularDrag = 1
	crashTolerance = 400
	breakingForce = 70000
	breakingTorque = 70000
	maxTemp = 2400 // = 320000
	bulkheadProfiles = Size3
	heatConductivity = 0.00001
	thermalMassModifier = 1.0

  // animationName = BLPsubvlsDeploy
	MODULE
	{
		name = ModuleActiveRadiator
		maxEnergyTransfer = 5000
		overcoolFactor = 0.25
		isCoreRadiator = true
		maxLinksAway = 4	
	}		

}
